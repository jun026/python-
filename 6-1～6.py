###6-1 使用一个字典来存储一个熟人的信息，包括名、姓、年龄和居住的城市。
##该字典应包括键first_name、last_name、age和city。将存储在该字典中的每项信息都打印出来

friend_p ={'first_name':'jun',
            'last_name':'wang',
             'age':'24',
              'city':'shanghai'}
print(friend_p)

###6-2 喜欢的数字：使用一个字典来存储一些人喜欢的数字。请想出5个人的名字，
##并将这些名字用作字典中的键；想出每个人喜欢的一个数字，并将这些数字作为值存储在字典中。
##打印每个人的名字和喜欢的数字。（为了让这个程序更有趣，通过询问朋友确保数据是真实的。）
numbers_name = {'jun':'7',
                'qqw':'0',
                'wang':'4',
                'David':'0',
                'Mike':'8'}
print(numbers_name)
##{'jun': '7', 'qqw': '0', 'wang': '4', 'David': '0', 'Mike': '8'}


###6-3 词汇表1： Python字典可用于模拟现实生活中的字典，但为避免混搅，我们将后者称为词汇表
## 想出你在前面学过的5个编程词汇，将它们用作词汇表中的键，并将它们的含义作为值存储在词汇表中
## 以整洁的方式打印每个词汇及其含义。为此，你可以先打印词汇，在它后面加上一个冒号，在打印词汇的含义；
#也可以在一行打印词汇，再使用换行符（\n）插入一个空行，然后在一行以缩进的方式打印词汇的含义。



### 6-4 词汇表 2：请将其中的一系列print语句替换为一个遍历字典中的键和值的循环。确定该循环正确无误后，
##在词汇表中添加5个python术语。当你再次运行这个程序时，这些新术语及其含义将自动包含在输出中。




### 6-5 河流：创建一个字典，在其中存储三条大河流及其流经的国家。其中一个键-值对可能是‘nile':'rgypt'.
## 使用循环为每条河流打印一条消息，如"The Nile runs through Egypt"。
##使用循环将该字典中每条河流的名字都打印出来
##使用循环将该字典包含的每个国家的名字都打印出来。





### 6-6 调查：在6.3.1节编写的程序favorite_languages.py中执行一下操作。
##创建一个应该会接受调查的人员名单，其中有些人已包含在字典中，而其他人未包含在字典中。
##遍历这个人员名单，对于已参与调查的人，打印一条消息表示感谢。对于还未参与调查的人，打印一条消息邀请他参与调查。

